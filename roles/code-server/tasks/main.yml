---

- name: Setup Google Chrome repo
  yum_repository:
    name: google-chrome
    description: google-chrome
    baseurl: http://dl.google.com/linux/chrome/rpm/stable/x86_64
    gpgcheck: true
    gpgkey: https://dl.google.com/linux/linux_signing_key.pub
    enabled: true
  when: ansible_facts.distribution == 'CentOS'

- block:

    - name: Add Google repo key
      apt_key:
        url: https://dl.google.com/linux/linux_signing_key.pub

    - name: Add Google Chrome repo
      apt_repository:
        repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
        filename: google-chrome

  when: ansible_facts.distribution == 'Ubuntu'

- name: Install Chrome
  package:
    name: google-chrome-stable

- name: Compute latest version
  block:
    - name: Get latest release
      uri:
        url: https://api.github.com/repos/cdr/code-server/releases/latest
      register: code_server_latest_release
    - name: Extract version
      set_fact:
        code_server_version: "{{ code_server_latest_release.json.name }}"
  when: not code_server_version

- name: Clean version
  set_fact:
    code_server_version: "{{ code_server_version | regex_replace('^v', '') }}"

- name: Check minimal version
  assert:
    that: code_server_version is version('3.5', '>=')
    msg: code-server version must be >= 3.5.0

- name: "Download code-server {{ code_server_version }}"
  get_url:
    url: "https://github.com/cdr/code-server/releases/download/v{{ code_server_version }}/code-server{{ distribution_package_name_sep[ansible_facts.distribution] }}{{ code_server_version }}{{ distribution_package_name_sep[ansible_facts.distribution] }}amd64.{{ distribution_package_ext[ansible_facts.distribution] }}"
    dest: "/tmp/code-server.{{ distribution_package_ext[ansible_facts.distribution] }}"

- name: "Install code-server {{ code_server_version }}"
  yum:
    name: "/tmp/code-server.{{ distribution_package_ext[ansible_facts.distribution] }}"
  when: ansible_facts.distribution == 'CentOS'
- name: "Install code-server {{ code_server_version }}"
  apt:
    deb: "/tmp/code-server.{{ distribution_package_ext[ansible_facts.distribution] }}"
  when: ansible_facts.distribution == 'Ubuntu'

- name: Create code-server config folder
  file:
    path: "~{{ current_os.user }}/.config/code-server"
    state: directory
    owner: "{{ current_os.user }}"
    group: "{{ current_os.user }}"
    mode: 0755

- name: Create code-server config
  template:
    src: config.yaml
    dest: "~{{ current_os.user }}/.config/code-server/config.yaml"
    owner: "{{ current_os.user }}"
    group: "{{ current_os.user }}"
    mode: 0644
  notify:
    - Restart code-server

- name: Install openssl dependency
  package:
    name: "{{ distribution_python_cryptography[ansible_facts.distribution] }}"
    state: present

- name: Generate code-server key
  openssl_privatekey:
    path: "~{{ current_os.user }}/.config/code-server/code-server.key"
    mode: 0400
  become: no
  notify:
    - Restart code-server

- name: Generate code-server CSR
  openssl_csr:
    path: "~{{ current_os.user }}/.config/code-server/code-server.csr"
    privatekey_path: "~{{ current_os.user }}/.config/code-server/code-server.key"
    common_name: "{{ public_dns_name }}"
    subject_alt_name:
      - "DNS:{{ public_dns_name }}"
      - "IP:{{ ansible_host }}"
  become: no

- name: Generate code-server certificate
  openssl_certificate:
    path: "~{{ current_os.user }}/.config/code-server/code-server.crt"
    csr_path: "~{{ current_os.user }}/.config/code-server/code-server.csr"
    privatekey_path: "~{{ current_os.user }}/.config/code-server/code-server.key"
    selfsigned_not_after: +5d
    provider: selfsigned
  become: no
  notify:
    - Restart code-server

- name: Flush handlers
  meta: flush_handlers

- name: Launch and enable code-server service
  service:
    name: "code-server@{{ current_os.user }}"
    state: started
    enabled: true

- name: Install extensions
  command: |
    code-server --install-extension {{ item }}
  become: no
  register: this
  changed_when: "'is already installed' not in this.stdout"
  loop: "{{ code_server_extensions }}"

- name: Create code-server user config folder
  file:
    path: "~{{ current_os.user }}/.local/share/code-server/User"
    state: directory
    owner: "{{ current_os.user }}"
    group: "{{ current_os.user }}"
    mode: 0775

- name: Create code-server user config
  copy:
    src: settings.json
    dest: "~{{ current_os.user }}/.local/share/code-server/User/settings.json"
    owner: "{{ current_os.user }}"
    group: "{{ current_os.user }}"
    mode: 0644
